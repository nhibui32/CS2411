Homework-3
Team#: ___ 
Team Member-1:________________________ Member’s Contribution (in %) __
Team Member-2:________________________ Member’s Contribution (in %) __
Team Member-3:________________________ Member’s Contribution (in %) __

Submission
1.	Work on the following requirements.
2.	Rename the CPP file and algorithm file to HW3_Team# (e.g., HW3_Team1.cpp)
3.	Upload your files to Canvas.
Problem Statement: Write a program that can be used to gather statistical data about the number of movies college students see in a month. The program should perform the following steps: 
1.	Ask the user how many students were surveyed [5 points]. The maximum number of students surveyed is 10. An array of integers with this many elements should then be created [15 points]. Please note that the user may enter a value less than 10, as shown in the sample example below.  
2.	Allow the user to enter the number of movies each student saw into the array [10 points]. 

3.	Calculate and display the average [10 points] and median [20 points] of the values entered. Use a function for each operation. In statistics, when a set of values is sorted in ascending or descending order, its median is the middle value. If the set contains an even number of values, the median is the mean, or average, of the two middle values. Please use one of the sorting algorithms that we discussed in class. 

4.	Draw a bar graph of the input data [10 points]. For example, let's assume the following inputs: 
Students	Total movies
S1	5
S2	3
S3	6
S4	1
S5	7

The program should display a bar graph similar to the one given below: 
 

The bar graph should be updated dynamically for any number of students (maximum 10) and any number of movies. 

Input Validation: Do not accept negative numbers for input. If the user enters a negative number, display an error message and let the user enter the value again. Repeat this step as long as user does not correct the mistake [10 points]. 
Programming Style: Make sure the programming style is followed. [10 points]
Programming Comments: Please make sure the code is well-commented. [10 points]

Note: Use of ChatGPT or similar generative AI is not allowed. 

***

Bonus Points: Create a dynamically allocated array of integers for item#1 to relax the requirements of the maximum of 10 students. For example, the program should work if the user enters 100 for the number of students. You must use pointers. [20 points]. 


